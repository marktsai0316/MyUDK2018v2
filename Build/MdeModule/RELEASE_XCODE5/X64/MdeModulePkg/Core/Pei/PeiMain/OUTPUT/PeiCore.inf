## @file
# PeiMain module is core module in PEI phase.
#
# It takes responsibilities of:
# 1) Initialize memory, PPI, image services etc, to establish PEIM runtime environment.
# 2) Dispatch PEIM from discovered FV.
# 3) Handoff control to DxeIpl to load DXE core and enter DXE phase.
#
# Copyright (c) 2006 - 2017, Intel Corporation. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution. The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = PeiCore
  FILE_GUID                  = 52C05B14-0B98-496c-BC3B-04B50211D680
  MODULE_TYPE                = PEI_CORE
  VERSION_STRING             = 1.0
  ENTRY_POINT                = PeiCore
  MODULE_UNI_FILE            = PeiCore.uni

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|PeiCore.efi

[PatchPcd.X64]
  ## SOMETIMES_CONSUMES
  gEfiMdeModulePkgTokenSpaceGuid.PcdLoadFixAddressPeiCodePageNumber|0x00000000|0xCFF0

  ## SOMETIMES_CONSUMES
  gEfiMdeModulePkgTokenSpaceGuid.PcdLoadFixAddressBootTimeCodePageNumber|0x00000000|0xCFF4

  ## SOMETIMES_CONSUMES
  gEfiMdeModulePkgTokenSpaceGuid.PcdLoadFixAddressRuntimeCodePageNumber|0x00000000|0xCFF8


[Protocols.X64]

[Ppis.X64]
  ## SOMETIMES_CONSUMES # PeiReportStatusService is not ready if this PPI doesn't exist
  gEfiPeiStatusCodePpiGuid

  ## SOMETIMES_CONSUMES # PeiResetService is not ready if this PPI doesn't exist
  gEfiPeiResetPpiGuid

  ## CONSUMES
  gEfiDxeIplPpiGuid

  ## PRODUCES
  gEfiPeiMemoryDiscoveredPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiDecompressPpiGuid

  ## SOMETIMES_PRODUCES
  ## NOTIFY
  ## SOMETIMES_PRODUCES # Produce FvInfoPpi if the encapsulated FvImage is found
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## SOMETIMES_PRODUCES
  ## NOTIFY
  ## SOMETIMES_PRODUCES # Produce FvInfoPpi2 if the encapsulated FvImage is found
  gEfiPeiFirmwareVolumeInfo2PpiGuid

  ## PRODUCES
  ## CONSUMES
  gEfiPeiLoadFilePpiGuid

  ## NOTIFY
  gEfiPeiSecurity2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamSupportPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamDonePpiGuid

  ## SOMETIMES_CONSUMES
  gEfiPeiReset2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiSecHobDataPpiGuid


[Guids.X64]
  ## SOMETIMES_CONSUMES   ## File
  gPeiAprioriFileNameGuid

  ## SOMETIMES_PRODUCES ## GUID # FV File System Guid.
  ## PRODUCES   ## UNDEFINED # Install ppi
  ## CONSUMES   ## UNDEFINED # Locate ppi
  gEfiFirmwareFileSystem2Guid

  ## PRODUCES   ## UNDEFINED # Install ppi
  ## CONSUMES   ## UNDEFINED # Locate ppi
  ## CONSUMES   ## GUID      # Used to compare with FV's file system guid and get the FV's file system format
  gEfiFirmwareFileSystem3Guid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation StackHob
  gEfiHobMemoryAllocStackGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation BspStoreHob
  gEfiHobMemoryAllocBspStoreGuid

  ## SOMETIMES_PRODUCES ## HOB # MemoryAllocation ModuleHob
  gEfiHobMemoryAllocModuleGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/PeiMemoryAllocationLib/PeiMemoryAllocationLib.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/PeiHobLib/PeiHobLib.inf
#  MdePkg/Library/PeiServicesLib/PeiServicesLib.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/PeiServicesTablePointerLib/PeiServicesTablePointerLib.inf
#  MdePkg/Library/BasePeCoffExtraActionLibNull/BasePeCoffExtraActionLibNull.inf
#  MdePkg/Library/BasePeCoffGetEntryPointLib/BasePeCoffGetEntryPointLib.inf
#  MdePkg/Library/BaseReportStatusCodeLibNull/BaseReportStatusCodeLibNull.inf
#  MdePkg/Library/BasePerformanceLibNull/BasePerformanceLibNull.inf
#  MdePkg/Library/PeiCoreEntryPoint/PeiCoreEntryPoint.inf
#  MdePkg/Library/BaseCacheMaintenanceLib/BaseCacheMaintenanceLib.inf
#  MdePkg/Library/BasePeCoffLib/BasePeCoffLib.inf

[Depex.X64]


[UserExtensions.TianoCore."ExtraFiles"]
PeiCoreExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC (EBC is for build only)
#
# [BootMode]
# S3_RESUME             ## SOMETIMES_CONSUMES
# [Hob]
# PHIT                  ## PRODUCES
# RESOURCE_DESCRIPTOR   ## SOMETIMES_PRODUCES
# RESOURCE_DESCRIPTOR   ## SOMETIMES_CONSUMES
# MEMORY_ALLOCATION     ## SOMETIMES_CONSUMES
# FIRMWARE_VOLUME       ## SOMETIMES_PRODUCES
# FIRMWARE_VOLUME       ## SOMETIMES_CONSUMES
# MEMORY_ALLOCATION     ## SOMETIMES_PRODUCES
# MEMORY_ALLOCATION     ## PRODUCES # MEMORY_ALLOCATION_STACK
# UNDEFINED             ## PRODUCES # MEMORY_POOL

[BuildOptions.X64]
## @AsBuilt
##   GCC:RELEASE_XCODE5_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_XCODE5_X64_DTC_FLAGS = -H epapr
##   GCC:RELEASE_XCODE5_X64_ASLDLINK_FLAGS = -e _ReferenceAcpiTable -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE5_X64_VFR_FLAGS = -l -n
##   GCC:RELEASE_XCODE5_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_XCODE5_X64_GENFW_FLAGS = 
##   GCC:RELEASE_XCODE5_X64_SLINK_FLAGS = -static -o
##   GCC:RELEASE_XCODE5_X64_ASM_FLAGS = -arch x86_64
##   GCC:RELEASE_XCODE5_X64_ASL_FLAGS = 
##   GCC:RELEASE_XCODE5_X64_MTOC_FLAGS = -align 0x20
##   GCC:RELEASE_XCODE5_X64_CC_FLAGS = -target x86_64-pc-win32-macho -c    -Os       -Wall -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -Wno-varargs -Wno-unused-const-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -D NO_MSABI_VA_FUNCS $(PLATFORM_FLAGS) -D DISABLE_NEW_DEPRECATED_INTERFACES
##   GCC:RELEASE_XCODE5_X64_NASMB_FLAGS = -f bin
##   GCC:RELEASE_XCODE5_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:RELEASE_XCODE5_X64_ASLCC_FLAGS = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h
##   GCC:RELEASE_XCODE5_X64_OPTROM_FLAGS = -e
##   GCC:RELEASE_XCODE5_X64_DLINK_FLAGS = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE5_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:RELEASE_XCODE5_X64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:RELEASE_XCODE5_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:RELEASE_XCODE5_X64_NASM_FLAGS = -f macho64
