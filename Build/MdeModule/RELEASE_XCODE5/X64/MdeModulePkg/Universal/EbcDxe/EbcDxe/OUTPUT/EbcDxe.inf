## @file
#  Module that produces EBC Interprete and EBC Debug Support protocols.
#
#  This module implements EFI Byte Code (EBC) Virtual Machine that can provide
#  platform and processor-independent mechanisms for loading and executing EFI
#  device drivers.
#
#  Copyright (c) 2015, The Linux Foundation. All rights reserved.
#  Copyright (c) 2006 - 2014, Intel Corporation. All rights reserved.<BR>
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = EbcDxe
  FILE_GUID                  = 13AC6DD0-73D0-11D4-B06B-00AA00BD6DE7
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = InitializeEbcDriver
  MODULE_UNI_FILE            = EbcDxe.uni

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|EbcDxe.efi
  DXE_DEPEX|EbcDxe.depex

[PatchPcd.X64]

[Protocols.X64]
  ## PRODUCES
  gEfiDebugSupportProtocolGuid

  ## PRODUCES
  gEfiEbcProtocolGuid

  ## SOMETIMES_PRODUCES
  gEfiEbcVmTestProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiEbcSimpleDebuggerProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]

[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf

[Depex.X64]
#  (TRUE) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

[UserExtensions.TianoCore."ExtraFiles"]
EbcDxeExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF AARCH64
#
# [Event]
#
# Periodic timer event to support EFI debug support protocol for EBC image.
#
# EVENT_TYPE_PERIODIC_TIMER ## CONSUMES

[BuildOptions.X64]
## @AsBuilt
##   GCC:RELEASE_XCODE5_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_XCODE5_X64_DTC_FLAGS = -H epapr
##   GCC:RELEASE_XCODE5_X64_ASLDLINK_FLAGS = -e _ReferenceAcpiTable -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE5_X64_VFR_FLAGS = -l -n
##   GCC:RELEASE_XCODE5_X64_PP_FLAGS = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
##   GCC:RELEASE_XCODE5_X64_GENFW_FLAGS = 
##   GCC:RELEASE_XCODE5_X64_SLINK_FLAGS = -static -o
##   GCC:RELEASE_XCODE5_X64_ASM_FLAGS = -arch x86_64
##   GCC:RELEASE_XCODE5_X64_ASL_FLAGS = 
##   GCC:RELEASE_XCODE5_X64_MTOC_FLAGS = -align 0x20
##   GCC:RELEASE_XCODE5_X64_CC_FLAGS = -target x86_64-pc-win32-macho -c    -Os       -Wall -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -Wno-varargs -Wno-unused-const-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -D NO_MSABI_VA_FUNCS $(PLATFORM_FLAGS) -D DISABLE_NEW_DEPRECATED_INTERFACES
##   GCC:RELEASE_XCODE5_X64_NASMB_FLAGS = -f bin
##   GCC:RELEASE_XCODE5_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
##   GCC:RELEASE_XCODE5_X64_ASLCC_FLAGS = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h
##   GCC:RELEASE_XCODE5_X64_OPTROM_FLAGS = -e
##   GCC:RELEASE_XCODE5_X64_DLINK_FLAGS = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
##   GCC:RELEASE_XCODE5_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:RELEASE_XCODE5_X64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:RELEASE_XCODE5_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:RELEASE_XCODE5_X64_NASM_FLAGS = -f macho64
